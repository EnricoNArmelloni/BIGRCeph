B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0), t1=day.0, t2=day.fin))
quants=quantile(w.pred$w.pred, probs = c(0.05,0.5,0.95))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
#ggplot()+
#  geom_violin(data=w.pred, aes(x=0,y=w.pred))+
#  geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(test.dat[test.dat$t2<15,]$w2, test.dat[test.dat$t2<15,]$pred.mu)
abline(a=0,b=1)
cor(test.dat$w2, test.dat$pred.mu)^2
test.dat$residuals=test.dat$w2-test.dat$pred.mu
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(test.dat$w2-mean(test.dat$w2)))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(w2 >= pred.lo & w2 <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
plot(test.dat[test.dat$t2<15,]$w2, test.dat[test.dat$t2<15,]$pred.mu)
abline(a=0,b=1)
plot(test.dat[test.dat$t2,]$w2, test.dat[test.dat$t2,]$pred.mu)
abline(a=0,b=1)
cor(test.dat$w2, test.dat$pred.mu)^2
plot(log(test.dat[test.dat$t2,]$w2), log(test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-log(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(test.dat$w2-mean(test.dat$w2)))
ej/MAD ### MASE
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
log(test.dat$w2)
hist(log(test.dat$w2))
ggplot()+
geom_violin(data=w.pred, aes(x=0,y=w.pred))+
geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
View(test.dat)
M12.data$temp=M12.data$Temperature
M12.data$ration=M12.data$Rcomma
test.dat=M12.data[!is.na(M12.data$w1)& !is.na(M12.data$w2),]
test.dat$pred.lo=test.dat$pred.hi=test.dat$pred.mu=NA
for(xx in 1:nrow(test.dat)){
cat(xx)
x.pred.dat=test.dat[xx,]
day.0=x.pred.dat$t1
day.fin=x.pred.dat$t2
x.prey=x.pred.dat$main_prey
gr.est=quadv(integrand.complete, a=day.0, b=day.fin,
aa=M1.posteriors$a,
bF1=M1.posteriors$bF,
bT1=M1.posteriors$bT1,
bT2=M1.posteriors$bT2,
mu=M1.posteriors$mu,
sigma=M1.posteriors$`sigma[28]`,
R=x.pred.dat$z1,
Fi1=M1.posteriors[,paste0('F[',index.F.M1[index.F.M1$main_prey==x.prey,]$Index.food,']')],
Fi2=M2.posteriors[,paste0('F[',index.F.M2[index.F.M2$main_prey==x.prey,]$Index.food,']')],
tem=x.pred.dat$z2,
A= M2.posteriors$A,
bTA= M2.posteriors$bTA,
bF2= M2.posteriors$bF,
B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0), t1=day.0, t2=day.fin))
quants=quantile(w.pred$w.pred, probs = c(0.01,0.5,0.99))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
#ggplot()+
#  geom_violin(data=w.pred, aes(x=0,y=w.pred))+
#  geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(log(test.dat[test.dat$t2,]$w2), log(test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-log(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(w2 >= pred.lo & w2 <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
ggplot()+
geom_violin(data=w.pred, aes(x=0,y=w.pred))+
geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
quants
w.pred$w.pred
hist(w.pred$w.pred)
quants=quantile(w.pred$w.pred, probs = c(0.001,0.5,0.99))
quants
quants=quantile(w.pred$w.pred, probs = c(0.01,0.5,0.99))
quants
quants=quantile(w.pred$w.pred, probs = c(0.005,0.5,0.99))
quants
# weight comparison simple
M12.data$temp=M12.data$Temperature
M12.data$ration=M12.data$Rcomma
test.dat=M12.data[!is.na(M12.data$w1)& !is.na(M12.data$w2),]
test.dat$pred.lo=test.dat$pred.hi=test.dat$pred.mu=NA
for(xx in 1:nrow(test.dat)){
cat(xx)
x.pred.dat=test.dat[xx,]
day.0=x.pred.dat$t1
day.fin=x.pred.dat$t2
x.prey=x.pred.dat$main_prey
gr.est=quadv(integrand.complete, a=day.0, b=day.fin,
aa=M1.posteriors$a,
bF1=M1.posteriors$bF,
bT1=M1.posteriors$bT1,
bT2=M1.posteriors$bT2,
mu=M1.posteriors$mu,
sigma=M1.posteriors$`sigma[28]`,
R=x.pred.dat$z1,
Fi1=M1.posteriors[,paste0('F[',index.F.M1[index.F.M1$main_prey==x.prey,]$Index.food,']')],
Fi2=M2.posteriors[,paste0('F[',index.F.M2[index.F.M2$main_prey==x.prey,]$Index.food,']')],
tem=x.pred.dat$z2,
A= M2.posteriors$A,
bTA= M2.posteriors$bTA,
bF2= M2.posteriors$bF,
B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0), t1=day.0, t2=day.fin))
quants=quantile(w.pred$w.pred, probs = c(0.005,0.5,0.995))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
ggplot()+
geom_violin(data=w.pred, aes(x=0,y=w.pred))+
geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(log(test.dat[test.dat$t2,]$w2), log(test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-log(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(w2 >= pred.lo & w2 <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
day.fin-day.0
day.fin
w.pred=data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0-1), t1=day.0, t2=day.fin))
quants=quantile(w.pred$w.pred, probs = c(0.005,0.5,0.995))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
ggplot()+
geom_violin(data=w.pred, aes(x=0,y=w.pred))+
geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
w.pred=data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0+1), t1=day.0, t2=day.fin))
quants=quantile(w.pred$w.pred, probs = c(0.005,0.5,0.995))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
ggplot()+
geom_violin(data=w.pred, aes(x=0,y=w.pred))+
geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
# weight comparison simple
M12.data$temp=M12.data$Temperature
M12.data$ration=M12.data$Rcomma
test.dat=M12.data[!is.na(M12.data$w1)& !is.na(M12.data$w2),]
test.dat$pred.lo=test.dat$pred.hi=test.dat$pred.mu=NA
for(xx in 1:nrow(test.dat)){
cat(xx)
x.pred.dat=test.dat[xx,]
day.0=x.pred.dat$t1
day.fin=x.pred.dat$t2
x.prey=x.pred.dat$main_prey
gr.est=quadv(integrand.complete, a=day.0, b=day.fin,
aa=M1.posteriors$a,
bF1=M1.posteriors$bF,
bT1=M1.posteriors$bT1,
bT2=M1.posteriors$bT2,
mu=M1.posteriors$mu,
sigma=M1.posteriors$`sigma[28]`,
R=x.pred.dat$z1,
Fi1=M1.posteriors[,paste0('F[',index.F.M1[index.F.M1$main_prey==x.prey,]$Index.food,']')],
Fi2=M2.posteriors[,paste0('F[',index.F.M2[index.F.M2$main_prey==x.prey,]$Index.food,']')],
tem=x.pred.dat$z2,
A= M2.posteriors$A,
bTA= M2.posteriors$bTA,
bF2= M2.posteriors$bF,
B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0+1), t1=day.0, t2=day.fin))
quants=quantile(w.pred$w.pred, probs = c(0.005,0.5,0.995))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
#ggplot()+
#  geom_violin(data=w.pred, aes(x=0,y=w.pred))+
#  geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(log(test.dat[test.dat$t2,]$w2), log(test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-log(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(w2 >= pred.lo & w2 <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
M12.data$temp=M12.data$Temperature
M12.data$ration=M12.data$Rcomma
test.dat=M12.data[!is.na(M12.data$w1)& !is.na(M12.data$w2),]
test.dat$pred.lo=test.dat$pred.hi=test.dat$pred.mu=NA
for(xx in 1:nrow(test.dat)){
cat(xx)
x.pred.dat=test.dat[xx,]
day.0=x.pred.dat$t1
day.fin=x.pred.dat$t2
x.prey=x.pred.dat$main_prey
gr.est=quadv(integrand.complete, a=day.0, b=day.fin,
aa=M1.posteriors$a,
bF1=M1.posteriors$bF,
bT1=M1.posteriors$bT1,
bT2=M1.posteriors$bT2,
mu=M1.posteriors$mu,
sigma=M1.posteriors$`sigma[28]`,
R=x.pred.dat$z1,
Fi1=M1.posteriors[,paste0('F[',index.F.M1[index.F.M1$main_prey==x.prey,]$Index.food,']')],
Fi2=M2.posteriors[,paste0('F[',index.F.M2[index.F.M2$main_prey==x.prey,]$Index.food,']')],
tem=x.pred.dat$z2,
A= M2.posteriors$A,
bTA= M2.posteriors$bTA,
bF2= M2.posteriors$bF,
B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0+1), t1=day.0, t2=day.fin))
quants=quantile(w.pred$w.pred, probs = c(0.1,0.5,0.99))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
#ggplot()+
#  geom_violin(data=w.pred, aes(x=0,y=w.pred))+
#  geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(log(test.dat[test.dat$t2,]$w2), log(test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-log(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(w2 >= pred.lo & w2 <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
plot(log(test.dat[test.dat$t2,]$w2), log(test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
plot(log(test.dat[test.dat$t2,]$residuals), log(test.dat[test.dat$t2,]$t2))
abline(a=0,b=0)
plot(log(test.dat[test.dat$t2,]$t2), log(test.dat[test.dat$t2,]$residuals))
abline(a=0,b=0)
plot(log(test.dat[test.dat$t2,]$t2), log(test.dat[test.dat$t2,]$residuals))
test.dat$residuals=log(test.dat$w2)-log(test.dat$pred.mu)
plot((test.dat[test.dat$t2,]$t2), (test.dat[test.dat$t2,]$residuals))
abline(a=0,b=0)
plot((test.dat[test.dat$t2,]$t1), (test.dat[test.dat$t2,]$residuals))
abline(a=0,b=0)
plot((test.dat[test.dat$t2,]$w1), (test.dat[test.dat$t2,]$residuals))
abline(a=0,b=0)
plot((test.dat[test.dat$t2,]$t1), (test.dat[test.dat$t2,]$residuals))
plot((test.dat[test.dat$t2,]$t), (test.dat[test.dat$t2,]$residuals))
abline(a=0,b=0)
# weight comparison simple
M12.data$temp=M12.data$Temperature
M12.data$ration=M12.data$Rcomma
test.dat=M12.data[!is.na(M12.data$w1)& !is.na(M12.data$w2),]
test.dat$pred.lo=test.dat$pred.hi=test.dat$pred.mu=NA
for(xx in 1:nrow(test.dat)){
cat(xx)
x.pred.dat=test.dat[xx,]
day.0=x.pred.dat$t1
day.fin=x.pred.dat$t2
x.prey=x.pred.dat$main_prey
gr.est=quadv(integrand.complete, a=day.0, b=day.fin,
aa=M1.posteriors$a,
bF1=M1.posteriors$bF,
bT1=M1.posteriors$bT1,
bT2=M1.posteriors$bT2,
mu=M1.posteriors$mu,
sigma=M1.posteriors$`sigma[28]`,
R=x.pred.dat$z1,
Fi1=M1.posteriors[,paste0('F[',index.F.M1[index.F.M1$main_prey==x.prey,]$Index.food,']')],
Fi2=M2.posteriors[,paste0('F[',index.F.M2[index.F.M2$main_prey==x.prey,]$Index.food,']')],
tem=x.pred.dat$z2,
A= M2.posteriors$A,
bTA= M2.posteriors$bTA,
bF2= M2.posteriors$bF,
B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=log(data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0+1), t1=day.0, t2=day.fin)))
quants=quantile(w.pred$w.pred, probs = c(0.1,0.5,0.99))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
#ggplot()+
#  geom_violin(data=w.pred, aes(x=0,y=w.pred))+
#  geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(log(test.dat[test.dat$t2,]$w2), (test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-log(test.dat$pred.mu)
test.dat$residuals=log(test.dat$w2)-(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(w2 >= pred.lo & w2 <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
plot((test.dat[test.dat$t2,]$t), (test.dat[test.dat$t2,]$residuals))
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(log(w2) >= pred.lo & log(w2) <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
plot((test.dat[test.dat$t2,]$t), (test.dat[test.dat$t2,]$residuals))
abline(a=0,b=0)
M12.data$temp=M12.data$Temperature
M12.data$ration=M12.data$Rcomma
test.dat=M12.data[!is.na(M12.data$w1)& !is.na(M12.data$w2),]
test.dat$pred.lo=test.dat$pred.hi=test.dat$pred.mu=NA
for(xx in 1:nrow(test.dat)){
cat(xx)
x.pred.dat=test.dat[xx,]
day.0=x.pred.dat$t1
day.fin=x.pred.dat$t2
x.prey=x.pred.dat$main_prey
gr.est=quadv(integrand.complete, a=day.0, b=day.fin,
aa=M1.posteriors$a,
bF1=M1.posteriors$bF,
bT1=M1.posteriors$bT1,
bT2=M1.posteriors$bT2,
mu=M1.posteriors$mu,
sigma=M1.posteriors$`sigma[28]`,
R=x.pred.dat$z1,
Fi1=M1.posteriors[,paste0('F[',index.F.M1[index.F.M1$main_prey==x.prey,]$Index.food,']')],
Fi2=M2.posteriors[,paste0('F[',index.F.M2[index.F.M2$main_prey==x.prey,]$Index.food,']')],
tem=x.pred.dat$z2,
A= M2.posteriors$A,
bTA= M2.posteriors$bTA,
bF2= M2.posteriors$bF,
B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=log(data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0+1), t1=day.0, t2=day.fin)))
quants=quantile(w.pred$w.pred, probs = c(0.0001,0.5,0.9999))
test.dat[xx,]$pred.lo=quants[1]
test.dat[xx,]$pred.hi=quants[3]
test.dat[xx,]$pred.mu=quants[2]
#ggplot()+
#  geom_violin(data=w.pred, aes(x=0,y=w.pred))+
#  geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(log(test.dat[test.dat$t2,]$w2), (test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(log(w2) >= pred.lo & log(w2) <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
for(xx in 1:nrow(test.dat)){
cat(xx)
x.pred.dat=test.dat[xx,]
day.0=x.pred.dat$t1
day.fin=x.pred.dat$t2
x.prey=x.pred.dat$main_prey
gr.est=quadv(integrand.complete, a=day.0, b=day.fin,
aa=M1.posteriors$a,
bF1=M1.posteriors$bF,
bT1=M1.posteriors$bT1,
bT2=M1.posteriors$bT2,
mu=M1.posteriors$mu,
sigma=M1.posteriors$`sigma[28]`,
R=x.pred.dat$z1,
Fi1=M1.posteriors[,paste0('F[',index.F.M1[index.F.M1$main_prey==x.prey,]$Index.food,']')],
Fi2=M2.posteriors[,paste0('F[',index.F.M2[index.F.M2$main_prey==x.prey,]$Index.food,']')],
tem=x.pred.dat$z2,
A= M2.posteriors$A,
bTA= M2.posteriors$bTA,
bF2= M2.posteriors$bF,
B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=log(data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0+1), t1=day.0, t2=day.fin)))
quants=quantile(w.pred$w.pred, probs = c(0.0001,0.5,0.9999))
test.dat[xx,]$pred.lo=max(w.pred)
test.dat[xx,]$pred.hi=min(w.pred)
test.dat[xx,]$pred.mu=quants[2]
#ggplot()+
#  geom_violin(data=w.pred, aes(x=0,y=w.pred))+
#  geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(log(test.dat[test.dat$t2,]$w2), (test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(log(w2) >= pred.lo & log(w2) <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
View(test.dat)
for(xx in 1:nrow(test.dat)){
cat(xx)
x.pred.dat=test.dat[xx,]
day.0=x.pred.dat$t1
day.fin=x.pred.dat$t2
x.prey=x.pred.dat$main_prey
gr.est=quadv(integrand.complete, a=day.0, b=day.fin,
aa=M1.posteriors$a,
bF1=M1.posteriors$bF,
bT1=M1.posteriors$bT1,
bT2=M1.posteriors$bT2,
mu=M1.posteriors$mu,
sigma=M1.posteriors$`sigma[28]`,
R=x.pred.dat$z1,
Fi1=M1.posteriors[,paste0('F[',index.F.M1[index.F.M1$main_prey==x.prey,]$Index.food,']')],
Fi2=M2.posteriors[,paste0('F[',index.F.M2[index.F.M2$main_prey==x.prey,]$Index.food,']')],
tem=x.pred.dat$z2,
A= M2.posteriors$A,
bTA= M2.posteriors$bTA,
bF2= M2.posteriors$bF,
B=M2.posteriors$`B[39]`,
bTB1= M2.posteriors$bTB1,
bTB2= M2.posteriors$bTB2,
C= M2.posteriors$C)
w.pred=(data.frame(w.pred=un.gr.formula(w1=x.pred.dat$w1, gr=gr.est$Q/(day.fin-day.0+1), t1=day.0, t2=day.fin)))
quants=quantile(w.pred$w.pred, probs = c(0.0001,0.5,0.9999))
test.dat[xx,]$pred.lo=max(w.pred)
test.dat[xx,]$pred.hi=min(w.pred)
test.dat[xx,]$pred.mu=quants[2]
#ggplot()+
#  geom_violin(data=w.pred, aes(x=0,y=w.pred))+
#  geom_point(data=x.pred.dat, aes(x=0, y=w2), color='red')
}
plot(log(test.dat[test.dat$t2,]$w2), (test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse(log(w2) >= pred.lo & log(w2) <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse((w2) >= pred.lo & (w2) <= pred.hi, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
plot((test.dat[test.dat$t2,]$w2), (test.dat[test.dat$t2,]$pred.mu))
abline(a=0,b=1)
cor(log(test.dat$w2), log(test.dat$pred.mu))^2
test.dat$residuals=log(test.dat$w2)-(test.dat$pred.mu)
ej=mean(abs(test.dat$residuals))
MAD=mean(abs(log(test.dat$w2)-mean(log(test.dat$w2))))
ej/MAD ### MASE
# Compute Coverage Probability
df <- test.dat %>%
mutate(inside_CI = ifelse((w2) >= pred.hi & (w2) <= pred.lo, 1, 0))
coverage_prob <- mean(df$inside_CI, na.rm = TRUE)
cat("Coverage Probability:", round(coverage_prob, 3), "\n")
plot((test.dat[test.dat$t2,]$t), (test.dat[test.dat$t2,]$residuals))
abline(a=0,b=0)
